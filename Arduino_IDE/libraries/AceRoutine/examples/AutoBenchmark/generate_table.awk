#!/usr/bin/gawk -f
#
# Usage: generate_table.awk < ${board}.txt
#
# Takes the *.txt file generated by AutoBenchmark.ino and generates an ASCII
# table that can be inserted into the README.md. Collects both sizeof()
# information as well as CPU benchmarks.

BEGIN {
  # Set to 1 when 'SIZEOF' is detected
  collect_sizeof = 0

  # Set to 1 when 'BENCHMARKS' is detected
  collect_benchmarks = 0
}

/^SIZEOF/ {
  collect_sizeof = 1
  collect_benchmarks = 0
  sizeof_index = 0
  next
}

/^BENCHMARKS/ {
  collect_sizeof = 0
  collect_benchmarks = 1
  benchmark_index = 0
  next
}

!/^END/ {
  if (collect_sizeof) {
    s[sizeof_index] = $0
    sizeof_index++
  }
  if (collect_benchmarks) {
    u[benchmark_index]["name"] = $1
    u[benchmark_index]["micros"] = $2
    u[benchmark_index]["iterations"] = $3
    benchmark_index++
  }
}

END {
  TOTAL_BENCHMARKS = benchmark_index
  TOTAL_SIZEOF = sizeof_index

  printf("Sizes of Objects:\n")
  for (i = 0; i < TOTAL_SIZEOF; i++) {
    print s[i]
  }

  # Calculate the diff from baseline
  baseline = u[0]["micros"]
  for (i = 0; i < TOTAL_BENCHMARKS; i++) {
    u[i]["diff"] = u[i]["micros"] - baseline
  }

  print ""
  print "CPU:"

  printf("+---------------------------------+--------+-------------+--------+\n")
  printf("| Functionality                   |  iters | micros/iter |   diff |\n")
  for (i = 0; i < TOTAL_BENCHMARKS; i++) {
    name = u[i]["name"]
    if (name ~ /^EmptyLoop$/ \
        || name ~ /^DirectScheduling$/ \
        || name ~ /^CoroutineScheduling$/ \
    ) {
      printf("|---------------------------------+--------+-------------+--------|\n")
    }

    printf("| %-31s | %6d | %11.3f | %6.3f |\n",
      name, u[i]["iterations"], u[i]["micros"], u[i]["diff"])
  }
  printf("+---------------------------------+--------+-------------+--------+\n")
}
